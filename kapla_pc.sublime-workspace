{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"rou",
				"routes"
			],
			[
				"Ap",
				"ApArtId"
			],
			[
				"beob",
				"beobId"
			],
			[
				"pro",
				"programmAp"
			],
			[
				"J",
				"JBerJahr"
			],
			[
				"node",
				"nodeText2"
			],
			[
				"date",
				"date1"
			],
			[
				"dat",
				"date1"
			]
		]
	},
	"buffers":
	[
		{
			"file": "server.js",
			"settings":
			{
				"buffer_size": 585,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/* eslint strict: 0 */\n'use strict'\n\nprocess.env.NODE_ENV = process.env.NODE_ENV || 'production'\n\nconst electron = require('electron')\nconst app = electron.app\nconst BrowserWindow = electron.BrowserWindow\nconst Menu = electron.Menu\nconst crashReporter = electron.crashReporter\nconst shell = electron.shell\nlet menu\nlet template\nlet mainWindow = null\n\ncrashReporter.start()\n\nif (process.env.NODE_ENV === 'development') {\n  require('electron-debug')()\n}\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') app.quit()\n})\n\napp.on('ready', () => {\n  mainWindow = new BrowserWindow({ width: 1024, height: 728 })\n\n  mainWindow.loadURL(`file://${__dirname}/app/app.html`)\n\n  mainWindow.on('closed', () => {\n    mainWindow = null\n  })\n\n  if (process.env.NODE_ENV === 'development') {\n    mainWindow.openDevTools()\n  }\n\n  if (process.platform === 'darwin') {\n    template = [{\n      label: 'Electron',\n      submenu: [{\n        label: 'About ElectronReact',\n        selector: 'orderFrontStandardAboutPanel:'\n      }, {\n        type: 'separator'\n      }, {\n        label: 'Services',\n        submenu: []\n      }, {\n        type: 'separator'\n      }, {\n        label: 'Hide ElectronReact',\n        accelerator: 'Command+H',\n        selector: 'hide:'\n      }, {\n        label: 'Hide Others',\n        accelerator: 'Command+Shift+H',\n        selector: 'hideOtherApplications:'\n      }, {\n        label: 'Show All',\n        selector: 'unhideAllApplications:'\n      }, {\n        type: 'separator'\n      }, {\n        label: 'Quit',\n        accelerator: 'Command+Q',\n        click () {\n          app.quit()\n        }\n      }]\n    }, {\n      label: 'Edit',\n      submenu: [{\n        label: 'Undo',\n        accelerator: 'Command+Z',\n        selector: 'undo:'\n      }, {\n        label: 'Redo',\n        accelerator: 'Shift+Command+Z',\n        selector: 'redo:'\n      }, {\n        type: 'separator'\n      }, {\n        label: 'Cut',\n        accelerator: 'Command+X',\n        selector: 'cut:'\n      }, {\n        label: 'Copy',\n        accelerator: 'Command+C',\n        selector: 'copy:'\n      }, {\n        label: 'Paste',\n        accelerator: 'Command+V',\n        selector: 'paste:'\n      }, {\n        label: 'Select All',\n        accelerator: 'Command+A',\n        selector: 'selectAll:'\n      }]\n    }, {\n      label: 'View',\n      submenu: (process.env.NODE_ENV === 'development') ? [{\n        label: 'Reload',\n        accelerator: 'Command+R',\n        click () {\n          mainWindow.restart()\n        }\n      }, {\n        label: 'Toggle Full Screen',\n        accelerator: 'Ctrl+Command+F',\n        click () {\n          mainWindow.setFullScreen(!mainWindow.isFullScreen())\n        }\n      }, {\n        label: 'Toggle Developer Tools',\n        accelerator: 'Alt+Command+I',\n        click () {\n          mainWindow.toggleDevTools()\n        }\n      }] : [{\n        label: 'Toggle Full Screen',\n        accelerator: 'Ctrl+Command+F',\n        click () {\n          mainWindow.setFullScreen(!mainWindow.isFullScreen())\n        }\n      }]\n    }, {\n      label: 'Window',\n      submenu: [{\n        label: 'Minimize',\n        accelerator: 'Command+M',\n        selector: 'performMiniaturize:'\n      }, {\n        label: 'Close',\n        accelerator: 'Command+W',\n        selector: 'performClose:'\n      }, {\n        type: 'separator'\n      }, {\n        label: 'Bring All to Front',\n        selector: 'arrangeInFront:'\n      }]\n    }, {\n      label: 'Help',\n      submenu: [{\n        label: 'Learn More',\n        click () {\n          shell.openExternal('http://electron.atom.io')\n        }\n      }, {\n        label: 'Documentation',\n        click () {\n          shell.openExternal('https://github.com/atom/electron/tree/master/docs#readme')\n        }\n      }, {\n        label: 'Community Discussions',\n        click () {\n          shell.openExternal('https://discuss.atom.io/c/electron')\n        }\n      }, {\n        label: 'Search Issues',\n        click () {\n          shell.openExternal('https://github.com/atom/electron/issues')\n        }\n      }]\n    }]\n\n    menu = Menu.buildFromTemplate(template)\n    Menu.setApplicationMenu(menu)\n  } else {\n    template = [{\n      label: '&File',\n      submenu: [{\n        label: '&Open',\n        accelerator: 'Ctrl+O'\n      }, {\n        label: '&Close',\n        accelerator: 'Ctrl+W',\n        click () {\n          mainWindow.close()\n        }\n      }]\n    }, {\n      label: '&View',\n      submenu: (process.env.NODE_ENV === 'development') ? [{\n        label: '&Reload',\n        accelerator: 'Ctrl+R',\n        click () {\n          mainWindow.restart()\n        }\n      }, {\n        label: 'Toggle &Full Screen',\n        accelerator: 'F11',\n        click () {\n          mainWindow.setFullScreen(!mainWindow.isFullScreen())\n        }\n      }, {\n        label: 'Toggle &Developer Tools',\n        accelerator: 'Alt+Ctrl+I',\n        click () {\n          mainWindow.toggleDevTools()\n        }\n      }] : [{\n        label: 'Toggle &Full Screen',\n        accelerator: 'F11',\n        click () {\n          mainWindow.setFullScreen(!mainWindow.isFullScreen())\n        }\n      }]\n    }, {\n      label: 'Help',\n      submenu: [{\n        label: 'Learn More',\n        click () {\n          shell.openExternal('http://electron.atom.io')\n        }\n      }, {\n        label: 'Documentation',\n        click () {\n          shell.openExternal('https://github.com/atom/electron/tree/master/docs#readme')\n        }\n      }, {\n        label: 'Community Discussions',\n        click () {\n          shell.openExternal('https://discuss.atom.io/c/electron')\n        }\n      }, {\n        label: 'Search Issues',\n        click () {\n          shell.openExternal('https://github.com/atom/electron/issues')\n        }\n      }]\n    }]\n    menu = Menu.buildFromTemplate(template)\n    mainWindow.setMenu(menu)\n  }\n})\n",
			"file": "main.js",
			"file_size": 5834,
			"file_write_time": 131021160298530543,
			"settings":
			{
				"buffer_size": 5804,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/index.js",
			"settings":
			{
				"buffer_size": 848,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/app.icns",
			"settings":
			{
				"buffer_size": 1429265,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/app.html",
			"settings":
			{
				"buffer_size": 791,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/app.global.css",
			"settings":
			{
				"buffer_size": 551,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/store/configureStore.production.js",
			"settings":
			{
				"buffer_size": 432,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/store/configureStore.js",
			"settings":
			{
				"buffer_size": 173,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/store/configureStore.development.js",
			"settings":
			{
				"buffer_size": 925,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/reducers/index.js",
			"settings":
			{
				"buffer_size": 225,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/reducers/counter.js",
			"settings":
			{
				"buffer_size": 294,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/containers/HomePage.js",
			"settings":
			{
				"buffer_size": 184,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/containers/DevTools.js",
			"settings":
			{
				"buffer_size": 329,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/containers/CounterPage.js",
			"settings":
			{
				"buffer_size": 426,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/containers/App.js",
			"settings":
			{
				"buffer_size": 474,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/components/Home.js",
			"settings":
			{
				"buffer_size": 350,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/components/Home.css",
			"settings":
			{
				"buffer_size": 162,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/components/Counter.js",
			"settings":
			{
				"buffer_size": 1300,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/components/Counter.css",
			"settings":
			{
				"buffer_size": 556,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/actions/counter.js",
			"settings":
			{
				"buffer_size": 592,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/routes.js",
			"settings":
			{
				"buffer_size": 364,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 48 files for \"click()\" (case sensitive)\n\nC:\\Users\\alex\\kapla\\main.js:\n  146        submenu: [{\n  147          label: 'Learn More',\n  148:         click() {\n  149            shell.openExternal('http://electron.atom.io')\n  150          }\n  ...\n  213        submenu: [{\n  214          label: 'Learn More',\n  215:         click() {\n  216            shell.openExternal('http://electron.atom.io')\n  217          }\n  218        }, {\n  219          label: 'Documentation',\n  220:         click() {\n  221            shell.openExternal('https://github.com/atom/electron/tree/master/docs#readme')\n  222          }\n  223        }, {\n  224          label: 'Community Discussions',\n  225:         click() {\n  226            shell.openExternal('https://discuss.atom.io/c/electron')\n  227          }\n  228        }, {\n  229          label: 'Search Issues',\n  230:         click() {\n  231            shell.openExternal('https://github.com/atom/electron/issues')\n  232          }\n\nC:\\Users\\alex\\kapla\\test\\e2e.js:\n   44    it('should to Counter with click \"to Counter\" link', async () => {\n   45      const link = await this.driver.findElement(webdriver.By.css(`.${homeStyles.container} > a`));\n   46:     link.click();\n   47  \n   48      const counter = await findCounter();\n   ..\n   52    it('should display updated count after increment button click', async () => {\n   53      const buttons = await findButtons();\n   54:     buttons[0].click();\n   55  \n   56      const counter = await findCounter();\n   ..\n   62      const counter = await findCounter();\n   63  \n   64:     buttons[1].click();  // -\n   65  \n   66      expect(await counter.getText()).to.equal('0');\n   ..\n   70      const buttons = await findButtons();\n   71      const counter = await findCounter();\n   72:     buttons[2].click();  // odd\n   73  \n   74      expect(await counter.getText()).to.equal('0');\n   ..\n   79      const counter = await findCounter();\n   80  \n   81:     buttons[0].click();  // +\n   82:     buttons[2].click();  // odd\n   83  \n   84      expect(await counter.getText()).to.equal('2');\n   ..\n   88      const buttons = await findButtons();\n   89      const counter = await findCounter();\n   90:     buttons[3].click();  // async\n   91  \n   92      expect(await counter.getText()).to.equal('2');\n   ..\n  101        webdriver.By.css(`.${counterStyles.backButton} > a`)\n  102      );\n  103:     link.click();\n  104  \n  105      await this.driver.findElement(webdriver.By.className(homeStyles.container));\n\n13 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 2515,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 173.0,
		"last_filter": "install",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"remo",
				"Package Control: Remove Package"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 223.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '2915d1851351e5ee549c20394736b442' + '8bc59f460fa1548d1514676163dafc88'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/alex/kapla",
		"/C/Users/alex/kapla/app",
		"/C/Users/alex/kapla/app/actions",
		"/C/Users/alex/kapla/app/api",
		"/C/Users/alex/kapla/app/components",
		"/C/Users/alex/kapla/app/containers",
		"/C/Users/alex/kapla/app/reducers"
	],
	"file_history":
	[
		"/C/Users/alex/kapla/test/e2e.js",
		"/C/Users/alex/apflora_api/configuration.js",
		"/C/Users/alex/apflora_api/pgDbPass.json",
		"/C/Users/alex/apflora_api/gulp-tasks/prod_copy_root_to_dist.js",
		"/C/Users/alex/apflora_api/appPass.json",
		"/C/Users/alex/apflora_api/dbPass.json",
		"/D/Google Drive/apflora/pgDbPass.json",
		"/C/Users/alex/apflora_api/gulp-tasks/prod_sftp.js",
		"/C/Users/alex/apflora_api/gulp-tasks/prod_copy.js",
		"/C/Users/alex/apflora_api/src/routes/beobKarteGet.js",
		"/C/Users/alex/apflora_api/test/beobKarte.js",
		"/C/Users/alex/apflora_api/queries/tabelleUpdateApflora.js",
		"/C/Users/alex/apflora_api/queries/beobKarte.js",
		"/C/Users/alex/.ssh/alex.pub",
		"/C/Users/alex/apflora_api/pgPlugin.js",
		"/C/Users/alex/apflora_api/.gitignore",
		"/C/Users/alex/apflora_api/dbConnection.js",
		"/C/Users/alex/apflora_api/sql/create_databases.sql",
		"/C/Users/alex/AppData/Roaming/postgresql/pgpass.conf",
		"/D/Google Drive/apflora/v2/createDbStructure.txt",
		"/D/Google Drive/apflora/v2/installDb.txt",
		"/C/Users/alex/.ssh/alex",
		"/C/Users/alex/.ssh/alex.ppk",
		"/C/Users/alex/apflora_api/sql/triggers.sql",
		"/C/Users/alex/apflora_api/sql/createViews.sql",
		"/C/Users/alex/apflora_api/sql/create_tables_beob.sql",
		"/C/Users/alex/apflora_api/sql/create_tables_apflora.sql",
		"/C/Users/alex/apflora_api/sql/countRows.sql",
		"/C/Users/alex/apflora_api/queries/tabelleInsertApflora.js",
		"/C/Users/alex/apf2_api/sql/create_tables_apflora.sql",
		"/C/Users/alex/apf2_api/sql/triggers.sql",
		"/C/Users/alex/apflora_api/src/routes/apflora.js",
		"/C/Users/alex/apflora_api/queries/tree/assozarten.js",
		"/C/Users/alex/apflora_api/queries/tree/apziel.js",
		"/C/Users/alex/apflora_api/queries/tree/beobNichtBeurteilt.js",
		"/C/Users/alex/apflora_api/queries/tree/ber.js",
		"/C/Users/alex/apflora_api/queries/tabelleInsertMultipleApflora.js",
		"/C/Users/alex/apflora_api/test/apfloraInsertMultiple.js",
		"/C/Users/alex/apflora_api/server.js",
		"/C/Users/alex/apflora_api/queries/tabelleSelectApfloraNumber.js",
		"/C/Users/alex/apflora_api/queries/tabelleSelectBeobNumber.js",
		"/C/Users/alex/apf2_api/sql/create_databases.sql",
		"/C/Users/alex/apflora_api/queries/feldkontrInsert.js",
		"/C/Users/alex/apflora_api/test/feldkontrInsert.js",
		"/C/Users/alex/apflora_api/queries/popInsertKopie.js",
		"/C/Users/alex/apflora_api/test/apflora.js",
		"/C/Users/alex/apflora_api/test/popInsertKopie.js",
		"/C/Users/alex/apflora_api/src/routes/treeGet.js",
		"/C/Users/alex/apflora_api/test/tree.js",
		"/C/Users/alex/apflora_api/test/tpopsKarte.js",
		"/C/Users/alex/apflora_api/queries/tpopsKarte.js",
		"/C/Users/alex/apflora_api/src/routes/tpopsKarteGet.js",
		"/C/Users/alex/apflora_api/test/tpopMassnTypen.js",
		"/C/Users/alex/apflora_api/src/routes/tpopMassnTypenGet.js",
		"/C/Users/alex/apflora_api/queries/tpopMassnTypen.js",
		"/C/Users/alex/apflora_api/test/tpopKoordFuerProgramm.js",
		"/C/Users/alex/apflora_api/queries/tpopKoordFuerProgramm.js",
		"/C/Users/alex/apflora_api/src/routes/tpopKoordFuerProgrammGet.js",
		"/C/Users/alex/apflora_api/queries/tpopmassnInsertKopie.js",
		"/C/Users/alex/apflora_api/queries/tpopkontrInsertKopie.js",
		"/C/Users/alex/apflora_api/queries/tpopInsertKopie.js",
		"/C/Users/alex/apflora_api/test/tpopmassnInsertKopie.js",
		"/C/Users/alex/apflora_api/src/routes/tpopmassnPostKopie.js",
		"/C/Users/alex/apflora_api/src/newGuid.js",
		"/C/Users/alex/apflora/src/modules/erstelleGuid.js",
		"/C/Users/alex/apflora_api/test/tpopkontrInsertKopie.js",
		"/C/Users/alex/apflora_api/src/routes/tpopkontrPostKopie.js",
		"/C/Users/alex/apflora_api/test/tpopInsertKopie.js",
		"/C/Users/alex/apflora_api/test/tpopKarteAlle.js",
		"/C/Users/alex/apflora_api/src/routes/tpopKarteAlleGet.js",
		"/C/Users/alex/apflora_api/queries/tpopKarteAlle.js",
		"/C/Users/alex/apflora_api/test/tpopKarte.js",
		"/C/Users/alex/apflora_api/queries/tpopKarte.js",
		"/C/Users/alex/apflora_api/src/routes/tpopKarteGet.js",
		"/C/Users/alex/apflora_api/test/popKarte.js",
		"/C/Users/alex/apflora_api/src/routes/tpopPostKopie.js",
		"/C/Users/alex/apflora_api/test/beob.js",
		"/C/Users/alex/apflora_api/src/routes/beob.js",
		"/C/Users/alex/apflora_api/queries/tabelleUpdateBeob.js",
		"/C/Users/alex/apflora_api/src/routes/beobPut.js",
		"/C/Users/alex/apflora_api/src/routes/beobGetFromTableByString.js",
		"/C/Users/alex/apflora_api/queries/tabelleSelectBeobString.js",
		"/C/Users/alex/apflora_api/src/routes/beobGetFromTableByNumber.js",
		"/C/Users/alex/apflora_api/src/routes/apfloraGetFromTableByString.js",
		"/C/Users/alex/apflora_api/src/routes/apfloraGetFromTableByNumber.js",
		"/C/Users/alex/apflora_api/src/routes/apfloraPost.js",
		"/C/Users/alex/apflora_api/src/routes/apfloraPut.js",
		"/C/Users/alex/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/alex/apflora_api/apflora.sublime-project",
		"/C/Users/alex/apflora_api/package.json",
		"/C/Users/alex/apflora_api/queries/tree/erfkrit.js",
		"/C/Users/alex/apflora_api/queries/tree/jber.js",
		"/C/Users/alex/apflora_api/queries/tree/jberUebersicht.js",
		"/C/Users/alex/apflora_api/queries/tree/idealbiotop.js",
		"/C/Users/alex/apflora_api/queries/tree/beobNichtZuzuordnen.js",
		"/C/Users/alex/apflora_api/queries/tabelleUpdateMultipleApflora.js",
		"/C/Users/alex/apflora_api/queries/tabelleSelectApfloraString.js",
		"/C/Users/alex/apflora_api/queries/qkPopOhnePopmassnber.js",
		"/C/Users/alex/apflora_api/queries/qkTpopOhneMassnber.js",
		"/C/Users/alex/apflora_api/queries/qkTpopOhneTpopber.js",
		"/C/Users/alex/apflora_api/queries/qkView.js",
		"/C/Users/alex/apflora_api/queries/tabelleDeleteApflora.js",
		"/C/Users/alex/apflora_api/queries/popKarte.js",
		"/C/Users/alex/apflora_api/queries/popKarteAlle.js",
		"/C/Users/alex/apflora_api/queries/popsChKarte.js",
		"/C/Users/alex/apflora_api/queries/qkPopOhnePopber.js",
		"/C/Users/alex/apflora_api/test/aktualisiereArteigenschaften.js",
		"/C/Users/alex/apflora_api/test/exportViewWhereIdIn.js",
		"/C/Users/alex/apflora_api/test/exportView.js",
		"/C/Users/alex/apflora_api/test/beobZuordnen.js",
		"/C/Users/alex/apflora_api/test/beobNaechsteTpop.js",
		"/C/Users/alex/apflora_api/test/beobDistzutpopInfospezies.js",
		"/C/Users/alex/apflora_api/queries/anmeldung.js",
		"/C/Users/alex/apflora_api/queries/ap.js",
		"/C/Users/alex/apflora_api/queries/beobNaechsteTpop.js",
		"/C/Users/alex/apflora_api/queries/feldkontrZaehleinheit.js",
		"/C/Users/alex/apflora_api/queries/gemeinden.js",
		"/C/Users/alex/apflora_api/queries/idealbiotopUebereinst.js",
		"/C/Users/alex/apflora_api/queries/lrDelarze.js",
		"/C/Users/alex/apflora_api/queries/popChKarte.js",
		"/C/Users/alex/apflora_api/queries/exportViewWhereIdIn.js",
		"/C/Users/alex/apflora_api/queries/exportView.js",
		"/C/Users/alex/apflora_api/queries/createInsertSqlFromObjectArray.js",
		"/C/Users/alex/apflora_api/queries/beobZuordnen.js",
		"/C/Users/alex/apflora_api/test/beobDistzutpopEvab.js",
		"/C/Users/alex/apflora_api/test/artliste.js",
		"/C/Users/alex/apflora_api/queries/apInsert.js",
		"/C/Users/alex/apflora_api/queries/apKarte.js"
	],
	"find":
	{
		"height": 41.0
	},
	"find_in_files":
	{
		"height": 366.0,
		"where_history":
		[
			"C:\\Users\\alex\\kapla",
			"C:\\Users\\alex\\apflora_api",
			"C:\\Users\\alex\\apflora_api\\test",
			"C:\\Users\\alex\\apflora_api\\src\\routes",
			"C:\\Users\\alex\\apflora_api",
			"C:\\Users\\alex\\artendb",
			"C:\\Users\\alex\\ae"
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			";",
			"\"",
			";",
			"\"",
			";",
			"\"",
			";",
			"click()",
			";",
			"config.db.userName",
			"dbPass",
			"insert/apflora/tabelle",
			"\"",
			"RETURNING",
			"to_number",
			"tpopInsertKopie",
			"\"",
			"apfloraPut",
			"apfloraDelete.js",
			"jberUebersicht.js",
			"jber.js",
			"jberUebersicht",
			"\"",
			"beobNichtZuordnen",
			"connection",
			"\"",
			"apfDb from aplist",
			"require('../routes')",
			"'../src",
			"'../queries",
			"const mysql = require('mysql')\nconst config = require('../configuration')\nconst escapeStringForSql = require('./escapeStringForSql')\nconst connection = mysql.createConnection({\n  host: 'localhost',\n  user: config.db.userName,\n  password: config.db.passWord,\n  database: 'apflora'\n})",
			"const mysql = require('mysql')\nconst config = require('../configuration')\nconst connection = mysql.createConnection({\n  host: 'localhost',\n  user: config.db.userName,\n  password: config.db.passWord,\n  database: 'beob'\n})",
			"const mysql = require('mysql')\nconst config = require('../configuration')\nconst connection = mysql.createConnection({\n  host: 'localhost',\n  user: config.db.userName,\n  password: config.db.passWord,\n  database: 'apflora'\n})",
			"feldkontrPost",
			"\"",
			"beobDistzutpopEvabGet",
			"apInsertPost",
			"config",
			"queryLrDelarze",
			"queryTabelleInsertApflora",
			"queryTabelleSelectBeobString",
			"queryTabelleSelectApfloraString",
			"./queries/qkTpopOhneMassnber.js",
			"json2csv",
			"queryBeobKarte",
			"queryBeobDistzutpopEvab",
			"queryApliste",
			"queryApKarte",
			"queryApInsert",
			"queryAnmeldung",
			"aktualisiereArteigenschaften",
			"json2csv",
			"adressen_get",
			"exportView",
			"queryAdressen",
			"exportView",
			"queryBeobZuordnen",
			"queryBeobNaechsteTpop",
			"beobNaechsteTpop",
			"queryBeobKarte",
			"beobKarte",
			"queryBeobDistzutpopEvab",
			"queryApliste",
			"queryApKarte",
			"queryApInsert",
			"queryTabelleDeleteApflora",
			"apflora/tabelle=",
			"queryAp",
			"queryAnmeldung",
			"aktualisiereArteigenschaften",
			"\\t",
			"queryAdressen",
			"exportKontr",
			"DistzuTPop",
			"queryBeobNaechsteTpop",
			"to_char",
			", '9999999')",
			"queryBeobKarte",
			"timeout",
			"() =>",
			"(done) =>",
			"queryBeobDistzutpopEvab",
			"beobDistzutpopEvab",
			"queryTabelleDeleteApflora",
			"delete",
			"queryApInsert",
			"\\n",
			"exportevab",
			"evab",
			"apflora.",
			"TABLE",
			"adresse",
			"CREATE INDEX",
			"ApArtId",
			"datetime",
			"_variable",
			"CREATE INDEX",
			"tinyint(1)",
			"KEY",
			"PRIMARY KEY",
			"char",
			"double precision precision",
			"double",
			"int(11)",
			"tinyint(1)",
			"smallint(5)",
			"int(2)",
			"int(7)",
			"int(10)",
			"longtext",
			".MutWer IS",
			".MutWann IS",
			"int",
			"int(5)",
			"int",
			"int(11)",
			"PRIMARY",
			"smallint(5)",
			"int(10)",
			"my_column",
			" COMMENT ''",
			"Von wem wurde der Datensatz zuletzt geaendert?",
			"Wann wurde der Datensatz zuletzt geaendert?",
			" COMMENT ''",
			"'comment'",
			" COMMENT ''",
			"tblJBer",
			"tblJBerUebersicht"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"",
			"'",
			"",
			"'",
			"",
			"'",
			"",
			"click ()",
			"",
			"'",
			"BeobNichtZuordnen",
			"'",
			"require('../src/routes')",
			"'..",
			"'../../queries",
			"const pg = require('pg')\nconst config = require('../configuration')\nconst connectionString = config.pg.connectionString",
			"'",
			"beobDistzutpopInfospeziesGet",
			"apPost",
			"adressenGet",
			"  ",
			"DistZuTPop",
			", 'FM9999999')",
			"function ()",
			"function (done)",
			", ",
			"",
			"ziel",
			"tpopmassnber",
			"tpopmassn",
			"tpopkontrzaehl",
			"tpopkontr_typ_werte",
			"tpopkontr",
			"tpopber",
			"tpop",
			"popmassnber",
			"popber",
			"pop_entwicklung_werte",
			"pop",
			"smallint",
			"double precision",
			"integer",
			"smallint",
			"integer",
			"text",
			".\"MutWer\" IS",
			".\"MutWann\" IS",
			"smallint",
			"integer",
			"smallint",
			"integer",
			"",
			"Von wem wurde der Datensatz zuletzt geändert?",
			"Wann wurde der Datensatz zuletzt geändert?",
			"",
			"''",
			"",
			"apber",
			"apberuebersicht",
			"assozart",
			"ber",
			"erfkrit",
			"ap_erfbeurtkrit_werte",
			"idealbiotop",
			"ap",
			"popber",
			"popmassnber",
			"pop",
			"pop_status_werte",
			"tpop_apberrelevant_werte",
			"tpopber",
			"pop_entwicklung_werte",
			"tpopkontr",
			"tpopkontr_typ_werte",
			"adresse",
			"pop_entwicklung_werte",
			"tpopkontrzaehl_methode_werte",
			"tpopkontrzaehl_einheit_werte",
			"tpopmassn",
			"tpopmassn_typ_werte",
			"adresse",
			"tpopmassn_erfbeurt_werte",
			"tpop",
			"tpopmassnber",
			"user",
			"ziel",
			"zielber",
			"ziel_typ_werte",
			"",
			"zielber",
			"ziel_typ_werte",
			"ziel",
			"user",
			"tpopmassnber",
			"tpopmassn_typ_werte",
			"tpopmassn_erfbeurt_werte",
			"tpopmassn",
			"tpopkontrzaehl_methode_werte",
			"tpopkontrzaehl_einheit_werte",
			"tpopkontrzaehl",
			"tpopkontr_typ_werte",
			"tpopkontr_idbiotuebereinst_werte",
			"tpopkontr",
			"tpopber",
			"tpop_entwicklung_werte",
			"tpop_apberrelevant_werte",
			"tpop",
			"popmassnber",
			"popber",
			"pop_status_werte",
			"pop_entwicklung_werte",
			"pop",
			"idealbiotop",
			"erfkrit",
			"ber",
			"beobzuordnung",
			"assozart",
			"apberuebersicht",
			"apber",
			"ap_umsetzung_werte",
			"ap_erfkrit_werte",
			"ap_erfbeurtkrit_werte",
			"ap_bearbstand_werte",
			"ap",
			"adresse",
			"",
			"'",
			"apflora.ap.ApArtId AS ApArtId"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 19,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "server.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 585,
						"regions":
						{
						},
						"selection":
						[
							[
								121,
								121
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 21,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5804,
						"regions":
						{
						},
						"selection":
						[
							[
								4912,
								4912
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 19,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "app/index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 848,
						"regions":
						{
						},
						"selection":
						[
							[
								406,
								406
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 17,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "app/app.icns",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1429265,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 16,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "app/app.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 791,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 15,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "app/app.global.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 551,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 14,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "app/store/configureStore.production.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 432,
						"regions":
						{
						},
						"selection":
						[
							[
								314,
								314
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "app/store/configureStore.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 173,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "app/store/configureStore.development.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 925,
						"regions":
						{
						},
						"selection":
						[
							[
								700,
								700
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "app/reducers/index.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 225,
						"regions":
						{
						},
						"selection":
						[
							[
								224,
								224
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "app/reducers/counter.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 294,
						"regions":
						{
						},
						"selection":
						[
							[
								232,
								232
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "app/containers/HomePage.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 184,
						"regions":
						{
						},
						"selection":
						[
							[
								171,
								171
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "app/containers/DevTools.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 329,
						"regions":
						{
						},
						"selection":
						[
							[
								222,
								222
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "app/containers/CounterPage.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 426,
						"regions":
						{
						},
						"selection":
						[
							[
								353,
								353
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "app/containers/App.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 474,
						"regions":
						{
						},
						"selection":
						[
							[
								375,
								375
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "app/components/Home.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 350,
						"regions":
						{
						},
						"selection":
						[
							[
								324,
								324
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "app/components/Home.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 162,
						"regions":
						{
						},
						"selection":
						[
							[
								97,
								97
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "app/components/Counter.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1300,
						"regions":
						{
						},
						"selection":
						[
							[
								575,
								575
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 18,
					"file": "app/components/Counter.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 556,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 19,
					"file": "app/actions/counter.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 592,
						"regions":
						{
						},
						"selection":
						[
							[
								442,
								442
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 20,
					"file": "app/routes.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 364,
						"regions":
						{
						},
						"selection":
						[
							[
								284,
								292
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 18,
					"type": "text"
				},
				{
					"buffer": 21,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2515,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										156,
										163
									],
									[
										328,
										335
									],
									[
										490,
										497
									],
									[
										693,
										700
									],
									[
										866,
										873
									],
									[
										1203,
										1210
									],
									[
										1431,
										1438
									],
									[
										1580,
										1587
									],
									[
										1785,
										1792
									],
									[
										1952,
										1959
									],
									[
										1989,
										1996
									],
									[
										2196,
										2203
									],
									[
										2383,
										2390
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([^ 	].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1287.0,
						"zoom_level": 1.0
					},
					"stack_index": 20,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 41.0
	},
	"input":
	{
		"height": 50.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 232.0
	},
	"pinned_build_system": "",
	"project": "kapla_pc.sublime-project",
	"replace":
	{
		"height": 92.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 290.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
